export const quizQuestions = [
    {
        question: "Which is the most popular JavaScript library for building user interfaces?",
        options: ["Angular", "React", "Svelte", "Vue"],
        correctOption: 1,
        points: 10,
    },
    {
        question: "Which company developed React?",
        options: ["Google", "Apple", "Netflix", "Facebook"],
        correctOption: 3,
        points: 10,
    },
    {
        question: "What is the fundamental building block of React apps?",
        options: ["Components", "Blocks", "Elements", "Effects"],
        correctOption: 0,
        points: 10,
    },
    {
        question: "Which hook is used to manage state in functional components?",
        options: ["useContext", "useState", "useEffect", "useReducer"],
        correctOption: 1,
        points: 10,
    },
    {
        question: "What does JSX stand for?",
        options: ["JavaScript XML", "JavaScript Extension", "JavaScript Express", "Java Syntax Extension"],
        correctOption: 0,
        points: 10,
    },
    {
        question: "Which hook runs side effects in functional components?",
        options: ["useState", "useEffect", "useCallback", "useMemo"],
        correctOption: 1,
        points: 10,
    },
    {
        question: "What is the virtual DOM in React?",
        options: ["A virtual reality simulator", "A browser-specific DOM", "A lightweight copy of the real DOM", "A DOM manipulation tool"],
        correctOption: 2,
        points: 10,
    },
    {
        question: "Which of these is true about props in React?",
        options: ["They are immutable", "They are mutable", "They are global variables", "They can only be used in class components"],
        correctOption: 0,
        points: 10,
    },
    {
        question: "How do you pass data from a parent component to a child component?",
        options: ["Using state", "Using props", "Using context", "Using hooks"],
        correctOption: 1,
        points: 10,
    },
    {
        question: "Which hook should be used to avoid performance issues by memoizing values?",
        options: ["useEffect", "useState", "useMemo", "useReducer"],
        correctOption: 2,
        points: 10,
    },
    {
        question: "Which method is used to update the state in class components?",
        options: ["setState()", "useState()", "updateState()", "renderState()"],
        correctOption: 0,
        points: 10,
    },
    {
        question: "What does the useReducer hook return?",
        options: ["Only the current state", "An array with current state and dispatch", "A function to update state", "Nothing"],
        correctOption: 1,
        points: 10,
    },
    {
        question: "Which lifecycle method is invoked after a component is rendered in class components?",
        options: ["componentDidMount", "componentWillUnmount", "shouldComponentUpdate", "render"],
        correctOption: 0,
        points: 10,
    },
    {
        question: "What is the default behavior of a React component on receiving new props?",
        options: ["It re-renders", "It stays the same", "It unmounts", "It crashes"],
        correctOption: 0,
        points: 10,
    },
    {
        question: "What is the use of keys in React lists?",
        options: ["To store element references", "To identify unique elements", "To trigger re-renders", "To optimize bundle size"],
        correctOption: 1,
        points: 10,
    },
];
